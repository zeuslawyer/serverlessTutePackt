# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: restAPI # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10

# you can overwrite defaults here
  stage: dev
  region: us-east-1

# you can define service wide environment variables here
  environment:
    DYNAMODB_TABLE: 'notes'

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region,
      self:provider.region}:*:table/$
      {self:provider.environment.DYNAMODB_TABLE}"
    
functions:
  hello:
    handler: handler.hello

resources:
  Resources:
    NotesDynamoDbTable:         #this is the NAME of the resource - i.e. the dynamoDB table
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain    #the database table will remain on AWS even after we remove the serverless service
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

#custom configure the local dev dynamodb instance to start alongside serverless
custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true    # run db in memory, not taking up storage
      migrate: true   # create our db table when running the app

plugins:
#db needs to be loaded FIRST
# dont forget to run sls dynamodb install in the terminal...
# and check with sls dynamodb start to see if it serves shell locally
  - serverless-dynamodb-local  
  - serverless-offline
  